stages:
  - build
  - sync

build:
  stage: build
  #image: maven:3.6.3-jdk-8
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/mvnd:1.0.2-dragonwell-8-anolis
  variables:
    MAVEN_OPTS: >-
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
    MAVEN_CLI_OPTS: >-
      --batch-mode
      --errors
      --fail-at-end
      --show-version
      --no-transfer-progress
      -DinstallAtEnd=true
      -DdeployAtEnd=true

    SETTINGS_XML_PATH: settings.xml
    LANG: C.UTF-8
  script:
    - GPG_FILE=`find / -name xuxiaowei_0x30F97859_SECRET`
    - echo $GPG_FILE
    - gpg --import $GPG_FILE && echo '导入 GPG 秘钥成功（用于给 jar 包等文件签名）'
    - echo $SETTINGS_XML_PATH
    - yum -y install epel-release
    - yum -y install p7zip
    - 7za x SF-CSIM-EXPRESS-SDK-V2.1.6-20211027.7z && echo '解压 顺风 jar 包成功' || exit 1
    - ls -lh SF-CSIM-EXPRESS-SDK-V2.1.6
    - ls -lh SF-CSIM-EXPRESS-SDK-V2.1.6/SF-CSIM-EXPRESS-SDK-V2.1.6.jar && echo '查看 要上传到中央仓库的 顺风 jar 包 成功' || exit 1
    - GROUP_ID=`mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout -s $SETTINGS_XML_PATH`
    - ARTIFACT_ID=`mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout -s $SETTINGS_XML_PATH`
    - VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout -s $SETTINGS_XML_PATH`
    - mvn clean source:jar javadoc:jar -s $SETTINGS_XML_PATH && echo '生成上传 顺风 jar 包 相关必要文件成功：（*-javadoc.jar、*-sources.jar）' || exit 1
    - ls -lh target
    - ls -lh target/$ARTIFACT_ID-$VERSION-javadoc.jar && echo '查看上传 顺风 jar 包 必要 javadoc 文件 成功' || exit 1
    - ls -lh target/$ARTIFACT_ID-$VERSION-sources.jar && echo '查看上传 顺风 jar 包 必要 sources 文件 成功' || exit 1
    - cp SF-CSIM-EXPRESS-SDK-V2.1.6/SF-CSIM-EXPRESS-SDK-V2.1.6.jar target/$ARTIFACT_ID-$VERSION.jar && echo '复制 要上传到中央仓库的 顺风 jar 包 成功' || exit 1
    - ls -lh target
    - ls -lh target/$ARTIFACT_ID-$VERSION.jar && echo '查看上传 顺风 jar 包 文件 成功' || exit 1
    - sed -i "s#</servers>#<server><id>ossrh</id><username>$ossrh_user</username><password>$ossrh_pass</password></server>&#" $SETTINGS_XML_PATH && echo '配置中央仓库密码成功' || exit 1
    - cp pom.xml target/$ARTIFACT_ID-$VERSION.pom
    - gpg --armor --detach-sign target/$ARTIFACT_ID-$VERSION.pom && echo '.pom 包签名成功' || exit 1
    - gpg --armor --detach-sign target/$ARTIFACT_ID-$VERSION.jar && echo '.jar 包签名成功' || exit 1
    - gpg --armor --detach-sign target/$ARTIFACT_ID-$VERSION-javadoc.jar && echo '-javadoc.jar 包签名成功' || exit 1
    - gpg --armor --detach-sign target/$ARTIFACT_ID-$VERSION-sources.jar && echo '-sources.jar 包签名成功' || exit 1
    - ls -lh target/$ARTIFACT_ID-$VERSION.pom.asc && echo '查看 pom.xml 签名结果成功' || exit 1
    - ls -lh target/$ARTIFACT_ID-$VERSION.jar.asc && echo '查看 .jar 包签名结果成功' || exit 1
    - ls -lh target/$ARTIFACT_ID-$VERSION-javadoc.jar.asc && echo '查看 -javadoc.jar 包签名结果成功' || exit 1
    - ls -lh target/$ARTIFACT_ID-$VERSION-sources.jar.asc && echo '查看 -sources.jar 包签名结果成功' || exit 1
    - |
      mvn deploy:deploy-file \
      -Durl=https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/ \
      -DrepositoryId=ossrh \
      -DpomFile=pom.xml \
      -Dfile=target/$ARTIFACT_ID-$VERSION.jar \
      -Dfiles=target/$ARTIFACT_ID-$VERSION.pom.asc,target/$ARTIFACT_ID-$VERSION.jar.asc,target/$ARTIFACT_ID-$VERSION-javadoc.jar,target/$ARTIFACT_ID-$VERSION-javadoc.jar.asc,target/$ARTIFACT_ID-$VERSION-sources.jar,target/$ARTIFACT_ID-$VERSION-sources.jar.asc \
      -Dclassifiers=,,javadoc,javadoc,sources,sources \
      -Dtypes=pom.asc,jar.asc,jar,jar.asc,jar,jar.asc \
      -s $SETTINGS_XML_PATH
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .m2/repository
  rules:
    - if: $CI_COMMIT_TAG

include:
  - local: sync.yml
